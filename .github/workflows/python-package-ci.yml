
name: Run Tests

on:
  push:
    branches: [ master, pymtl4.0-dev ]
  pull_request:
    branches: [ master, pymtl4.0-dev ]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9" ]
        # python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Verilator
      run: |
        wget --progress=dot:giga https://github.com/cornell-brg/verilator-ci-cache/raw/master/verilator-github-actions-5.032.tar.gz
        echo $PWD
        whoami
        tar -C ${HOME} -xzf verilator-github-actions-5.032.tar.gz
        echo "${HOME}/verilator/bin" >> $GITHUB_PATH
        echo "PKG_CONFIG_PATH=${HOME}/verilator/share/pkgconfig:${PKG_CONFIG_PATH}" >> $GITHUB_ENV

    - name: Check Verilator
      run: |
        which verilator
        verilator --version
        pkg-config --modversion verilator
        pkg-config --cflags verilator

    - name: Install dependencies
      run: |
        sudo apt-get install -y graphviz
        pip install --upgrade pip
        pip install --requirement requirements/CI.txt
        pip install .

    - name: Test with pytest
      run: |
        mkdir -p build && cd build
        # Run all unit tests under pymtl3 directory except for those in the
        # yosys backend (we run yosys tests in the second run). This is
        # necessary to avoid using the same component name for different
        # shared libraries (Verilog and Yosys backend translation result).
        pytest --cov-config=../.coveragerc --cov-report xml --cov=pymtl3 \
            ../pymtl3 --ignore=../pymtl3/passes/backends/yosys --tb=short \
            --hypothesis-profile CI
        pytest --cov-config=../.coveragerc --cov-report xml --cov=pymtl3 --cov-append \
            ../pymtl3/passes/backends/yosys --tb=short \
            --hypothesis-profile CI

    - name: Upload code coverage report
      run: |
        codecov
